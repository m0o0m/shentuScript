<!--
骰子表单 客户端脚本文件 2013年6月24日 11:41:17
-->
<form>
	<dialog id=骰子表单 w=250 h=250 image="1908800001,1908800002,1908800003,1908800004,1908800009,1908800007,1908800008,1908800005,1908800006" title_color=#DEC6A4 close=true center=true OnInit=ShaiZiBiaoDan.Initialize savepos=true magic=1>
        <button image=1906300001 x=4 y=5 w=29 h=25 id=? />
	</dialog>

	<script><![CDATA[
		ShaiZiBiaoDan = {}
		local t = ShaiZiBiaoDan
		t.NumImg = {
			[1] = 1990135342,
			[2] = 1990135343,
			[3] = 1990135344,
			[4] = 1990135345,
			[5] = 1990135346,
			[6] = 1990135347,
		}

		--初始化控件函数
		t.Initialize = function(this)
			--删除全部定时器
			WndDelAllTimer(this, nil)
			--隐藏并删除原有的骰子
			local delsz = 0
			for i=1,50 do
				delsz = GetWindow(this, "SZ"..i)
				if 0 ~= delsz then WndSetVisible(delsz, nil, false) else break end
				if 0 ~= delsz then WndClose(delsz) end
			end

			--初始化
			t.playtimer = 15 --定时刷新时间
			t.playtime_min = 1000 -- 最短时间,可以通过调整这个时间来增大/减少转动时间
			t.playtime_max = 15000 -- 最长时间
			local rmin = 1 --最小旋转半径
			local rmax = 3 --最大旋转半径
			local fmin = 1 --最小改变数字间隔
			local fmax = 3 --最大改变数字间隔
			local tmin = 60 --最小剩余TICK
			local tmax = 75 --最大剩余TICK

			t.StartPt = {}
			t.NumEndImg = {}
			t.NumCurImg = {}
			t.playtime = t.playtime_max
			t.r = {}
			t.ang = {}
			t.lefttick = {}
			t.lflpidx = {}
			t.flpoff = {}

			--解析表单参数,骰子个数,后面分别是每个骰子的点数
			t.SZNum = 0
			local SZParam = {3, 1, 3, 5, 6, 2, 3, 6, 6, 1, 5} --测试例子
			if FormParam ~= nil and #FormParam ~= 0 then
				SZParam = FormParam
			end
			if #SZParam ~= 0 then
				t.SZNum = tonumber(SZParam[1])
				if (t.SZNum + 1) > #SZParam then
					return
				end
				for i = 1, t.SZNum do
					t.NumEndImg[i] = t.NumImg[tonumber(SZParam[i+1])]
					t.NumCurImg[i] = t.NumImg[math.random(1,6)]
				end
			else
				return
			end
			
			--根据空白区域大小和骰子大小计算行列数并估算能容纳的骰子个数
			local SZImgSize = {w=0,h=0}
			if UI:Lua_GetTextureWidthHeight(t.NumImg[1]) then
				SZImgSize = {w=LuaRet[1]+6,h=LuaRet[2]+6}
			end
			local cx,cy = WndGetSize(this,nil)
			local BlankRect = {l=SZImgSize.w/2,t=30+SZImgSize.h,r=cx-SZImgSize.w/2,b=cy-SZImgSize.h}
			local offsetx = BlankRect.l + (BlankRect.r-BlankRect.l-t.SZNum*SZImgSize.w) / 2
			local offsety = BlankRect.t + (BlankRect.b-BlankRect.t-SZImgSize.h) / 2

			--添加骰子
			for i = 1, t.SZNum do
				t.r[i] = math.random(rmin,rmax) --旋转半径
				t.ang[i] = 0.0 --旋转角度
				t.lefttick[i] = math.random(tmin,tmax) --剩余TICK
				t.lflpidx[i] = 0 --上一次翻转的TICK
				t.flpoff[i] = math.random(fmin,fmax) --改变数字间隔

				--设置骰子初始位置
				t.StartPt[i] = {x=offsetx+(i-1)*SZImgSize.w,y=offsety}

				local script = [[<form default_parent=骰子表单><image image=0 x=-15 y=-118 w=26 h=31 id=SZ]]..i..[[ /></form>]]
				GenFormByString(script)
				ImageSetImageID(this, "SZ"..i, t.NumCurImg[i])
				local CurPt = {x=t.StartPt[i].x,y=t.StartPt[i].y}
				WndSetPosM(this, "SZ"..i, CurPt.x, CurPt.y)
			end

			--msg("start")
			for i = 1, t.SZNum do
				WndAddTimer(this, nil, i, t.playtimer+math.random(1,3), "ShaiZiBiaoDan.OnTimer")
			end
			WndAddTimer(this, nil, t.SZNum+1, t.playtimer, "ShaiZiBiaoDan.OnTimerStop")
		end

		t.OnTimerStop = function(this, timer_id)
			t.playtime = t.playtime-t.playtimer
			local finish = true
			for i = 1, t.SZNum do
				if t.lefttick[i] > 0.1 then
					finish = false
					break
				else
					t.lefttick[i] = 0
				end
			end
			if finish then
				WndDelTimer(this, nil, timer_id)
				t.playtime = 0
				--msg("finish")
			end
		end

		t.OnTimer = function(this, timer_id)
			local i = timer_id
			if t.playtime <= 0 or t.lefttick[i] <= 0.1 then
				WndDelTimer(this, nil, timer_id)
				ImageSetImageID(this, "SZ"..i, t.NumEndImg[i])
				local CurPt = {x=t.StartPt[i].x,y=t.StartPt[i].y}
				WndSetPosM(this, "SZ"..i, CurPt.x, CurPt.y)
			else
				--以较小的半径t.r[i]旋转,t.ang[i]是当前角度
				local lx = math.cos(t.ang[i])
				local ly = math.sin(t.ang[i])
				if (lx < 0.1 and lx > 0) or (lx > -0.1 and lx < 0) then lx = 0 end
				if (ly < 0.1 and ly > 0) or (ly > -0.1 and ly < 0) then ly = 0 end
				t.ang[i] = t.ang[i] + 0.1
				if t.ang[i] > math.pi*2 then t.ang[i] = 0.0 end

				--根据间隔改变数字,不重复上次的图片
				local flpidx = math.floor((t.playtime_max-t.playtime)/t.playtimer)
				if (t.playtime_max-t.playtime) < t.playtime_min then
					local flp = t.lflpidx[i] + math.floor(t.flpoff[i])
					if flpidx >= flp then
						t.lflpidx[i] = flpidx

						local img = 0
						repeat
							img = math.random(1,6)
						until img ~= t.NumCurImg[i]
						t.NumCurImg[i] = img
						ImageSetImageID(this, "SZ"..i, t.NumImg[t.NumCurImg[i]])

						--本次偏移
						local rx = lx*t.r[i]*(t.playtime/t.playtime_max)
						local ry = (ly*t.r[i]+math.random(0,t.r[i]))*(t.playtime/t.playtime_max)*0.5
						local CurPt = {x=t.StartPt[i].x+rx,y=t.StartPt[i].y+ry}
						WndSetPosM(this, "SZ"..i, CurPt.x, CurPt.y)
					end
				else
					local flp = t.lflpidx[i] + math.floor(t.flpoff[i])
					if flpidx >= flp then
						t.flpoff[i] = t.flpoff[i] + (1-(t.playtime/t.playtime_max)*0.9)
						t.lflpidx[i] = flpidx

						local img = 0
						repeat
							img = math.random(1,6)
						until img ~= t.NumCurImg[i]
						t.NumCurImg[i] = img
						ImageSetImageID(this, "SZ"..i, t.NumImg[t.NumCurImg[i]])

						--本次偏移
						local rx = lx*t.r[i]*(t.playtime/t.playtime_max)
						local ry = (ly*t.r[i]+math.random(0,t.r[i]))*(t.playtime/t.playtime_max)*0.5
						local CurPt = {x=t.StartPt[i].x+rx,y=t.StartPt[i].y+ry}
						WndSetPosM(this, "SZ"..i, CurPt.x, CurPt.y)
					end
					--减少剩余TICK
					t.lefttick[i] = t.lefttick[i] * (0.93+math.random(1,3)*0.01)
				end
			end
		end
	]]></script>
</form>
